name: Release
on:
  release:
    types: [published]
jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: github.repository == 'taskmedia/paperlessngx-ftp-bridge'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: bump release version (Chart.yaml)
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: yq -i ".version = \"$(echo ${TAG_NAME:1})\"" charts/paperlessngx-ftp-bridge/Chart.yaml

      - name: commit version bump
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore(release): update version to ${{ github.event.release.tag_name }}"
          commit_options: "--no-verify"
          file_pattern: charts/paperlessngx-ftp-bridge/Chart.yaml

      - name: move release tag
        shell: bash
        run: |
          git tag --force ${{ github.event.release.tag_name }} HEAD
          git push --force origin ${{ github.event.release.tag_name }}

      - name: update latest tag
        shell: bash
        run: |
          git tag --force latest HEAD
          git push --force origin latest

  build-image:
    needs: version-bump
    runs-on: ubuntu-latest
    if: github.repository == 'taskmedia/paperlessngx-ftp-bridge'
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: taskmedia/paperlessngx-ftp-bridge-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          platforms: |
            linux/386
            linux/amd64
            linux/arm64
            linux/ppc64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/taskmedia/paperlessngx-ftp-bridge-image:latest
            ghcr.io/taskmedia/paperlessngx-ftp-bridge-image:${{ github.event.release.tag_name }}
            fty4/paperlessngx-ftp-bridge-image:main
            fty4/paperlessngx-ftp-bridge-image:latest
            fty4/paperlessngx-ftp-bridge-image:${{ github.event.release.tag_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes --tlog-upload=false {}@${{ steps.build-and-push.outputs.digest }}

      - name: Get repository name
        env:
          REPOSITORY_NAME: ${{ env.IMAGE_NAME }}
        run: echo "REPOSITORY_NAME=${REPOSITORY_NAME#*/}" >> $GITHUB_ENV

      # Clean up legacy images from ghcr.io
      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ env.REPOSITORY_NAME }}
          package-type: "container"
          min-versions-to-keep: 200
          delete-only-untagged-versions: "true"

  helm-build-and-deploy:
    needs: build-image
    runs-on: ubuntu-latest
    if: github.repository == 'taskmedia/paperlessngx-ftp-bridge'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: azure/setup-helm@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release binary
        run: |
          helm package charts/paperlessngx-ftp-bridge --destination release/

      - name: login ghcr registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u taskmedia --password-stdin

      - name: push Helm chart to ghcr
        run: helm push ./release/*tgz oci://ghcr.io/taskmedia

      - name: Update Index
        env:
          GH_PAGES_URL: github.com/taskmedia/helm
          REPO_NAME: paperlessngx-ftp-bridge
          HELM_URL: https://helm.task.media/
        run: |
          rm -rf ./gh-pages.zip
          rm -rf ./repo
          curl -sSLO https://${GH_PAGES_URL}/archive/gh-pages.zip
          unzip -o ./gh-pages.zip -d ./repo/
          mv -f ./repo/helm-gh-pages/* ./repo
          rm -rf ./repo/helm-gh-pages/
          mkdir -p ./repo/${REPO_NAME} || true
          cp ./release/*tgz ./repo/${REPO_NAME}/
          cp ./README.md ./repo/${REPO_NAME}/index.md
          helm repo index --merge ./repo/index.yaml --url ${HELM_URL} ./repo

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.6.8
        with:
          repository-name: taskmedia/helm
          branch: gh-pages
          ssh-key: ${{ secrets.DEPLOY_KEY_BLOG }}
          folder: repo
          clean: false

  build-binaries:
    name: Build binaries for release
    needs: version-bump
    runs-on: ubuntu-latest
    if: github.repository == 'taskmedia/paperlessngx-ftp-bridge'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Build binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o ./bin/paperlessngx-ftp-bridge-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o ./bin/paperlessngx-ftp-bridge-linux-arm64
          GOOS=linux GOARCH=arm go build -o ./bin/paperlessngx-ftp-bridge-linux-arm
          GOOS=linux GOARCH=386 go build -o ./bin/paperlessngx-ftp-bridge-linux-386

          # macOS with Intel CPU
          GOOS=darwin GOARCH=amd64 go build -o ./bin/paperlessngx-ftp-bridge-darwin-amd64
          # macOS with Apple Silicon CPU
          GOOS=darwin GOARCH=arm64 go build -o ./bin/paperlessngx-ftp-bridge-darwin-arm64

          GOOS=windows GOARCH=amd64 go build -o ./bin/paperlessngx-ftp-bridge-windows-amd64.exe
          GOOS=windows GOARCH=386 go build -o ./bin/paperlessngx-ftp-bridge-windows-386.exe

      - name: Upload artifacts to existing release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            ./bin/paperlessngx-ftp-bridge-linux-amd64
            ./bin/paperlessngx-ftp-bridge-linux-arm64
            ./bin/paperlessngx-ftp-bridge-linux-arm
            ./bin/paperlessngx-ftp-bridge-linux-386
            ./bin/paperlessngx-ftp-bridge-darwin-amd64
            ./bin/paperlessngx-ftp-bridge-darwin-arm64
            ./bin/paperlessngx-ftp-bridge-windows-amd64.exe
            ./bin/paperlessngx-ftp-bridge-windows-386.exe
