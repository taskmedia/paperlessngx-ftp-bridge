name: test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  cross:
    name: test
    runs-on: ${{ matrix.os }}
    env:
      GO_VERSION: 1.23.1
      GOLANGCI_LINT_VERSION: v1.61.0
      # YAEGI_VERSION: v0.16.1
      # YAEGI_UNSAFE: 1
      CGO_ENABLED: 0
    defaults:
      run:
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}

    strategy:
      matrix:
        go-version: [1.23.1, 1.x]
        os: [ubuntu-latest, macos-latest]

    steps:
      # https://github.com/marketplace/actions/setup-go-environment
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      # https://github.com/marketplace/actions/checkout
      - name: Check out code
        uses: actions/checkout@v4
        with:
          path: go/src/github.com/${{ github.repository }}
          fetch-depth: 0

      # https://github.com/marketplace/actions/cache
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go-version }}-go-

      # https://golangci-lint.run/usage/install#other-ci
      - name: Install golangci-lint ${{ env.GOLANGCI_LINT_VERSION }}
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLANGCI_LINT_VERSION}

      # - name: Install Yaegi ${{ env.YAEGI_VERSION }}
      #   run: curl -sfL https://raw.githubusercontent.com/traefik/yaegi/master/install.sh | bash -s -- -b $(go env GOPATH)/bin ${YAEGI_VERSION}

      - name: Setup GOPATH
        run: go env -w GOPATH=${{ github.workspace }}/go

      - name: Check and get dependencies
        run: |
          go mod tidy
          git diff --exit-code go.mod
          # git diff --exit-code go.sum
          go mod download
          go mod vendor
          # git diff --exit-code ./vendor/
          cp -R vendor/ ${{ github.workspace }}/go/src/

      - name: Lint and Tests
        run: make

      - name: Coverage report
        run: go test -coverprofile=coverage.txt

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

    # - name: Run tests with Yaegi
    #   run: make yaegi_test
    #   env:
    #     GOPATH: ${{ github.workspace }}/go
